{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import '@k2oss/k2-broker-core';\r\n\r\nmetadata = {\r\n    systemName: \"csvreader\",\r\n    displayName: \"CSV Reader Broker\",\r\n    description: \"A broker that reads a CSV file and returns each line as a list.\"\r\n};\r\n\r\nondescribe = async function({configuration}): Promise<void> {\r\n    postSchema({\r\n        objects: {\r\n            \"lines\": {\r\n                displayName: \"Lines\",\r\n                description: \"Describes all lines in a CSV file\",\r\n                properties: {\r\n                    \"file\": {\r\n                        displayName: \"File\",\r\n                        type: \"attachment\"\r\n                    },\r\n                    \"line\": {\r\n                        displayName: \"Line\",\r\n                        type: \"string\"\r\n                    }\r\n                },\r\n                methods: {\r\n                    \"getLines\": {\r\n                        displayName: \"Get Lines\",\r\n                        type: \"read\",\r\n                        inputs: [ \"file\" ],\r\n                        outputs: [ \"line\" ]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nonexecute = async function({objectName, methodName, parameters, properties, configuration, schema}): Promise<void> {\r\n    switch (objectName)\r\n    {\r\n        case \"lines\": await onexecuteSplit(methodName, properties); break;\r\n        default: throw new Error(\"The object \" + objectName + \" is not supported.\");\r\n    }\r\n}\r\n\r\nasync function onexecuteSplit(methodName: string, properties: SingleRecord): Promise<void> {\r\n    switch (methodName)\r\n    {\r\n        case \"getLines\": await onexecuteLinesSplit(properties); break;\r\n        default: throw new Error(\"The method \" + methodName + \" is not supported.\");\r\n    }\r\n}\r\n\r\nfunction onexecuteLinesSplit(properties: SingleRecord): Promise<void> {\r\n    return new Promise<void>((resolve, reject) =>\r\n    {\r\n        // var xhr = new XMLHttpRequest();\r\n        // xhr.onreadystatechange = function() {\r\n            try {\r\n                doGET(\"https://drive.google.com/file/d/1bwNwJdqMl8kHNVMEchUSwf58zPphs1Zc/view?usp=sharing\", handleFileData, resolve);\r\n            } catch (e) {\r\n                reject(e);\r\n            }        \r\n        // if(typeof properties[\"id\"] !== \"number\") throw new Error(\"properties[\\\"id\\\"] is not of type number\");\r\n        // xhr.open(\"GET\", 'https://jsonplaceholder.typicode.com/todos/' + encodeURIComponent(properties[\"id\"]));\r\n        // xhr.setRequestHeader('test', 'test value');\r\n        // xhr.send();\r\n    });\r\n}\r\n\r\nfunction doGET(path, callback, resolve) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function() {\r\n        if (xhr.readyState == 4) {\r\n            if (xhr.status == 200) {\r\n                callback(xhr.responseText, resolve);\r\n            } else {\r\n                callback(null);\r\n            }\r\n        }\r\n    };\r\n    xhr.open(\"GET\", path);\r\n    xhr.send();\r\n}\r\n\r\nfunction handleFileData(fileData, resolve) {\r\n    if (!fileData) {\r\n        // Show error\r\n        return;\r\n    }\r\n    \r\n    postResult({\r\n        \"line\": fileData\r\n    });\r\n    resolve();\r\n}\r\n\r\n"],"names":["handleFileData","fileData","resolve","postResult","metadata","systemName","displayName","description","ondescribe","async","configuration","postSchema","objects","properties","type","methods","inputs","outputs","onexecute","objectName","methodName","parameters","schema","Promise","reject","path","callback","xhr","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","send","doGET","e","Error","onexecuteSplit"],"mappings":"YAqFA,SAASA,EAAeC,EAAUC,GACzBD,IAKLE,WAAW,MACCF,IAEZC,KA5FJE,SAAW,CACPC,WAAY,YACZC,YAAa,oBACbC,YAAa,mEAGjBC,WAAaC,gBAAeC,cAACA,IACzBC,WAAW,CACPC,QAAS,OACI,CACLN,YAAa,QACbC,YAAa,oCACbM,WAAY,MACA,CACJP,YAAa,OACbQ,KAAM,mBAEF,CACJR,YAAa,OACbQ,KAAM,WAGdC,QAAS,UACO,CACRT,YAAa,YACbQ,KAAM,OACNE,OAAQ,CAAE,QACVC,QAAS,CAAE,eAQnCC,UAAYT,gBAAeU,WAACA,EAADC,WAAaA,EAAbC,WAAyBA,EAAzBR,WAAqCA,EAArCH,cAAiDA,EAAjDY,OAAgEA,WAC/EH,OAEC,cAKbV,eAA8BW,EAAoBP,UACtCO,OAEC,iBAMF,IAAIG,QAAc,CAACrB,EAASsB,UAgBvC,SAAeC,EAAMC,EAAUxB,OACvByB,EAAM,IAAIC,eACdD,EAAIE,mBAAqB,WACC,GAAlBF,EAAIG,aACc,KAAdH,EAAII,OACJL,EAASC,EAAIK,aAAc9B,GAE3BwB,EAAS,QAIrBC,EAAIM,KAAK,MAAOR,GAChBE,EAAIO,OAvBQC,CAAM,qFAAsFnC,EAAgBE,GAC9G,MAAOkC,GACLZ,EAAOY,0BAZA,IAAIC,MAAM,cAAgBjB,EAAa,uBATlCkB,CAAelB,uBACpB,IAAIiB,MAAM,cAAgBlB,EAAa"}